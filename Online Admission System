import tkinter as tk
from tkinter import simpledialog

MAX_COURSES = 5

class Student:
    def __init__(self):
        self.name = ""
        self.age = 0
        self.course = ""
        self.marks = 0.0

students = [[Student() for _ in range(100)] for _ in range(MAX_COURSES)]
studentCount = [0] * MAX_COURSES

def checkEligibility(courseIndex, marks):
    if courseIndex == 0:  # Computer Science
        return marks >= 75.0
    elif courseIndex == 1:  # ECE
        return marks >= 65.0
    elif courseIndex == 2:  # Mech
        return marks >= 70.0
    elif courseIndex == 3:  # Bio Tech
        return marks >= 60.0
    elif courseIndex == 4:  # Chem
        return marks >= 65.0
    else:
        return False  # Default to not eligible

def suggestCourse(marks):
    if marks < 70.0:
        return 1  # ECE
    elif marks < 75.0:
        return 2  # Mech
    elif marks < 60.0:
        return 3  # Bio Tech
    else:
        return 4  # Chem

def courseToString(courseIndex):
    courses = ["Computer Science", "ECE", "Mech", "Bio Tech", "Chem"]
    return courses[courseIndex] if 0 <= courseIndex < len(courses) else "Unknown Course"

def applyForCourse(courseIndex):
    if studentCount[courseIndex] < 100:
        newStudent = Student()

        newStudent.name = simpledialog.askstring("Input", "Enter your name:")
        newStudent.age = simpledialog.askinteger("Input", "Enter your age:")
        newStudent.marks = simpledialog.askfloat("Input", "Enter your marks:")

        if not checkEligibility(courseIndex, newStudent.marks):
            suggestedCourse = suggestCourse(newStudent.marks)
            print(f"Sorry, you are not eligible for {courseToString(courseIndex)}. "
                  f"We suggest you apply for {courseToString(suggestedCourse)} instead.")
            return  # Do not add the student to the current course

        newStudent.course = courseToString(courseIndex)

        students[courseIndex][studentCount[courseIndex]] = newStudent
        studentCount[courseIndex] += 1

        print("Application successful!")
    else:
        print("Course is full. Cannot accept more applications.")

def displayStudents():
    content = ""
    for i in range(MAX_COURSES):
        content += f"Students for {courseToString(i)}:\n"
        for j in range(studentCount[i]):
            content += f"Name: {students[i][j].name}, Age: {students[i][j].age}, Marks: {students[i][j].marks:.2f}\n"
        content += "\n"

    # Create a tkinter window to display the content
    window = tk.Tk()
    window.title("Student Information")
    text = tk.Text(window)
    text.insert(tk.END, content)
    text.pack()

    window.mainloop()

def removeStudent(courseIndex, studentName):
    for i in range(studentCount[courseIndex]):
        if students[courseIndex][i].name == studentName:
            # Remove the student by shifting the array elements
            for j in range(i, studentCount[courseIndex] - 1):
                students[courseIndex][j] = students[courseIndex][j + 1]
            studentCount[courseIndex] -= 1
            print(f"Student {studentName} removed from {courseToString(courseIndex)}.")
            writeStudentsToFile()  # Update the file after removal
            return
    print(f"Student {studentName} not found in {courseToString(courseIndex)}.")

def writeStudentsToFile():
    with open("test.txt", "w") as file:
        for i in range(MAX_COURSES):
            file.write(f"Students for {courseToString(i)}:\n")
            for j in range(studentCount[i]):
                file.write(f"Name: {students[i][j].name}, Age: {students[i][j].age}, Marks: {students[i][j].marks:.2f}\n")
            file.write("\n")

def main():
    window = tk.Tk()
    window.title("Course Application System")

    def on_apply_click(courseIndex):
        applyForCourse(courseIndex)
        writeStudentsToFile()

    def on_display_click():
        displayStudents()

    def on_remove_click():
        courseIndex = simpledialog.askinteger("Input", "Enter course index (1-5):") - 1
        studentName = simpledialog.askstring("Input", "Enter student name:")
        removeStudent(courseIndex, studentName)

    # Buttons for each menu option
    apply_buttons = []
    for i in range(1, 6):
        apply_buttons.append(tk.Button(window, text=f"Apply for {courseToString(i - 1)}",
                                       command=lambda i=i: on_apply_click(i - 1)))
        apply_buttons[-1].pack()

    display_button = tk.Button(window, text="Display Students", command=on_display_click)
    display_button.pack()

    remove_button = tk.Button(window, text="Remove Student", command=on_remove_click)
    remove_button.pack()

    exit_button = tk.Button(window, text="Exit", command=window.destroy)
    exit_button.pack()

    window.mainloop()

if __name__ == "__main__":
    main()
